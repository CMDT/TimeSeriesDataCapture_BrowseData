---
swagger: "2.0"
info:
  description: ""
  version: "1.5.0"
  title: "TimeSeriesDataCapture"
  contact:
    name: "TimeSeriesDataCapture@gmail.com"
    email: "TimeSeriesDataCapture@gmail.com"
host: "localhost:8000"
basePath: "/apis"
tags:
- name: "Browse API"
  description: "Getting and postings components from server"
schemes:
- "http"
- "https"
paths:
  /components:
    get:
      tags:
      - "Browse API"
      summary: "Gets IDs available for import"
      description: "Gets all the component IDs available for import"
      operationId: "getComponentIDs"
      produces:
      - "application/json"
      parameters:
       - name: "folderID"
         in: "query"
         description: "Specifies a folder"
         required: false
         type: "string"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            description: "Array of component objects"
            items:
              type: "string"
              example: "component_id"
              description: "specific component ID"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
      security:
      - timeseries_admin_auth:
        - "admin"
      x-swagger-router-controller: "BrowseAPI"
    post:
      tags:
      - "Browse API"
      summary: "Posts component IDs for import"
      description: "Posts all the component IDs for import"
      operationId: "postComponentIDs"
      produces:
      - "application/json"
      parameters:
      - name: "componentIDs"
        in: "body"
        required: true
        schema:
          type: "array"
          description: "Array of component objects"
          items:
            type: "string"
            example: "component_id"
            description: "specific component ID"
      responses:
        200:
          description: "Success"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized"
      security:
      - timeseries_admin_auth:
        - "admin"
      x-swagger-router-controller: "BrowseAPI"
  /components/{componentID}:
    get:
      tags:
      - "Browse API"
      summary: "Get a specific component"
      description: "Get a specific imported component by component ID"
      operationId: "getComponent"
      parameters:
      - name: "componentID"
        in: "path"
        description: "Component ID specifies a component"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized"
      security:
      - timeseries_admin_auth:
        - "admin"
      x-swagger-router-controller: "BrowseAPI"
    delete:
      tags:
      - "Browse API"
      summary: "Deletes a specific component"
      description: "Deletes a specific imported component by component ID"
      operationId: "deleteComponent"
      parameters:
      - name: "componentID"
        in: "path"
        description: "Component ID specifies a component"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized"
      security:
      - timeseries_admin_auth:
        - "admin"
      x-swagger-router-controller: "BrowseAPI"
  /components/{componentID}/tags/:
    put:
      tags:
      - "Browse API"
      summary: "adds new tags to a specific component"
      description: "Sends tag IDs to be added to a specific component"
      operationId: "addComponentTags"
      parameters:
      - name: "componentID"
        in: "path"
        description: "Component ID specifies a component"
        required: true
        type: "string"
      - name: "tags"
        in: "body"
        required: true
        schema:
          type: "array"
          description: "Array of tags to be added"
          items:
            type: "string"
            example: "tag"
            description: "specific tag"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            description: "Array of tag ids"
            items:
              type: "string"
              example: "tag_id"
              description: "specific tag ID"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized"
      security:
      - timeseries_admin_auth:
        - "admin"
      x-swagger-router-controller: "BrowseAPI"
  /components/{componentID}/tags/{tagID}:
    delete:
      tags:
      - "Browse API"
      summary: "deletes tag from a specific component"
      description: "deletes a tag from a specific component"
      operationId: "deleteComponentTag"
      parameters:
      - name: "componentID"
        in: "path"
        description: "Component ID specifies a component"
        required: true
        type: "string"
      - name: "tagID"
        in: "path"
        description: "tag ID specifies a tag"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            type: "string"
            example: "tag_id"
            description: "specific tag ID"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized"
      security:
      - timeseries_admin_auth:
        - "admin"
      x-swagger-router-controller: "BrowseAPI"
  /components/{componentID}/annotations:
    post:
      tags:
      - "Browse API"
      summary: "adds new annotations tag"
      description: "adds new annotations tag for a specific component"
      operationId: "addComponentAnnotations"
      parameters:
      - name: "componentID"
        in: "path"
        description: "Component ID specifies a component"
        required: true
        type: "string"
      - name: "annotations"
        in: "body"
        required: true
        schema:
          type: "array"
          description: "Array of tags to be added"
          items:
            type: "object"
            properties:
              description:
                type: "string"
                description: "string description"
                example: "description"
              xcoordinate:
                type: "integer"
                description: "x co-ordinate"
            description: "specific annotation"
      responses:
        200:
          description: "Success"
          schema:
            type: "string"
            example: "annotation_id"
            description: "specific annotation ID"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized"
      security:
      - timeseries_admin_auth:
        - "admin"
      x-swagger-router-controller: "BrowseAPI"
  
  /components/{componentID}/annotations/{annotationID}:
    put:
      tags:
      - "Browse API"
      summary: "adds new annotations tag"
      description: "adds new annotations tag for a specific component"
      operationId: "updateComponentAnnotation"
      parameters:
      - name: "componentID"
        in: "path"
        description: "Component ID specifies a component"
        required: true
        type: "string"
      - name: "annotationID"
        in: "path"
        description: "Annotation ID specifies a annotation"
        required: true
        type: "string"
      - name: "annotation"
        in: "body"
        required: true
        schema:
            type: "object"
            properties:
              description:
                type: "string"
                description: "string description"
                example: "description"
              xcoordinate:
                type: "integer"
                description: "x co-ordinate"
            description: "specific annotation"
      responses:
        200:
          description: "Success"
          schema:
            type: "string"
            example: "annotation_id"
            description: "specific annotation ID"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized"
      security:
      - timeseries_admin_auth:
        - "admin"
      x-swagger-router-controller: "BrowseAPI"
    
    delete:
      tags:
      - "Browse API"
      summary: "Deletes a specific annotation"
      description: "Deletes a specific annotation by annotation ID"
      operationId: "deleteComponentAnnotation"
      parameters:
      - name: "componentID"
        in: "path"
        description: "Component ID specifies a component"
        required: true
        type: "string"
      - name: "annotationID"
        in: "path"
        description: "Annotation ID specifies a annotation"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            type: "string"
            example: "annotation_id"
            description: "specific annotation ID"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized"
      security:
      - timeseries_admin_auth:
        - "admin"
      x-swagger-router-controller: "BrowseAPI"
    
  /tags:
    get:
      tags:
      - "Browse API"
      summary: "Searches for componenets"
      description: "Searches database for components that match search string"
      operationId: "getTags"
      parameters:
      - name: "tags"
        in: "query"
        description: "Component ID specifies a component"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            description: "Array of component objects"
            items:
              type: "string"
              example: "component_id"
              description: "specific component ID"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized"
      security:
      - timeseries_admin_auth:
        - "admin"
      x-swagger-router-controller: "BrowseAPI"
  /search:
    get:
      tags:
      - "Browse API"
      summary: "Searches for componenets"
      description: "Searches database for components that match search string"
      operationId: "componentSearch"
      parameters:
      - name: "search"
        in: "query"
        description: "Search request"
        required: true
        type: "string"
      - name: "page"
        in: "query"
        description: "page number"
        required: false
        type: "integer"
      - name: "pagesize"
        in: "query"
        description: "page size (number of components)"
        required: false
        type: "integer"
      responses:
        200:
          description: "Success"
          schema:
            type: "array"
            description: "Array of component objects"
            items:
              type: "string"
              example: "component_id"
              description: "specific component ID"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized"
      x-swagger-router-controller: "BrowseAPI"
  /authenticate:
    get:
      tags:
      - "Browse API"
      summary: "Gets file storage token"
      description: "Retrieves file storage token login into file storage"
      operationId: "getAuthenticate"
      parameters: []
      responses:
        200:
          description: "Success"
          schema:
            type: "integer"
            example: "token"
            description: "File storage token"
        400:
          description: ""
      security:
      - timeseries_admin_auth:
        - "admin"
      x-swagger-router-controller: "BrowseAPI"
    post:
      tags:
      - "Browse API"
      summary: "Sends file storage auth token'"
      description: "Sends storage auth token"
      operationId: "postAuthenticate"
      parameters:
      - name: "fileStorageToken"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/fileStorageToken"
      responses:
        200:
          description: "Success"
        401:
          description: "Unauthorized"
      security:
      - timeseries_admin_auth:
        - "admin"
      x-swagger-router-controller: "BrowseAPI"
securityDefinitions:
  timeseries_admin_auth:
    type: "oauth2"
    authorizationUrl: "https://timeseriestest.eu.auth0.com/authorize"
    flow: "implicit"
    scopes:
      admin: "Full Access"
definitions:
  fileStorageToken:
    type: "object"
    properties:
      storageToken:
        type: "integer"
        description: "token used to authorize storage"
      profileID:
        type: "integer"
        description: "Id of the user logged in"
  component:
    properties:
      property:
        type: "string"
        description: "component property"
      value:
        type: "integer"
        description: "new value"
  inline_response_200:
    properties:
      id:
        type: "integer"
        description: "Run ID"
      Date&Timestamp:
        type: "integer"
        description: "Date and timestamp"
      TagCollection:
        type: "array"
        items:
          type: "string"
          example: "tag"
          description: "A tag"
      AnnotationCollection:
        type: "array"
        items:
          type: "string"
          example: "annotation"
          description: "A annotation"
      Data:
        $ref: "#/definitions/inline_response_200_Data"
    example:
      TagCollection:
      - "tag"
      AnnotationCollection:
      - "annotation"

      Date&Timestamp: 6
      Data:
        Column:
        - "data_point"
      id: 0
  inline_response_200_Data:
    properties:
      Column:
        type: "array"
        items:
          type: "integer"
          example: "data_point"
          description: "point of data"
    example:
      Column:
      - "data_point"
    
